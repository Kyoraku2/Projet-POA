Classes:

Enum COULEUR(BLUE,RED);

Public Board{
	//attributs
	private int cols;
	private int rows;
	private ArrayList<ArrayList<Cell>> cells;

	//methods
	public boolean addRider(Position pos);
	public boolean removeRider(Position pos);
	public String toString();
	
	//Ajout (yeet si jamais t'es pas d'accord ou on yettera plus tard)
	//(inspiré du TD2 sur les echecs)
	public boolean move(Position from, Position to);
	
	
}

Public Position{
	//attributs
	private int col;
	private int row;

	//methods
	public boolean isValid();
	public int getCol();
	public int getRow();
	
	//Ajout
	public boolean equals(Position pos);
	public String toString();
}

Public  Classe De{
	private int v; //valeur
	
	public De () {
		v=0;
	}
	
	public void rouler() {
		v=(int)(Math.random()*6)+1;
	}
	
	int getValeur() {
		return v;
	}
}

Public Classe Rider{
	//attributs
	private Position pos;
	private COULEUR color;

	//methods
	public void/boolean move(Position to);
	
	//Ajout
	public Postion getPos();
	public COULEUR getColor();
}

public class Game{
	private List<Rider> riders;
	private Board board;
	private int turn; //pas convaincu par celui là

	//methods
	Public void play(int first); //boucle de jeu
	Public void turn(Rider p1, Rider r2); //tour par tour
	
	//Ajout
	public String toString();
}

Abstract Cell{
	//attributs
	private Position pos;
	private char symbole;
	
	//methods
	String toString();
	
	//Ajout
	public char getSymbole();
	public Position getPosition();
}

Abstract PlayableCell extends Cell implements Questionnable{
	//attributs
	private boolean occuped;
	
	//methods
	abstract Public String process(Rider r);
}

Public CellFree extends PlayableCell {
	//methods
	Public String process(Rider r);
}

Public CellHole extends PlayableCell {
	//methods
	Public String process(Rider r);
}

Public CellHedge extends PlayableCell {
	//methods
	Public String process(Rider r);
}

Public CellRiver extends PlayableCell {
	//methods
	Public String process(Rider r);
}

Public CellSide extends Cell {
	//methods
	Public String process(Rider r);
}

Public CellWhite extends Cell{
	Public String process(Rider r);
}
